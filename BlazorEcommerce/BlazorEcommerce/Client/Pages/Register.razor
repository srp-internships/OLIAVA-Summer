@page "/register"
@inject IAuthService AuthService

<PageTitle>Register</PageTitle>

<h3>Register</h3>

<EditForm Model="user" OnValidSubmit="HandleRegistration">
    <DataAnnotationsValidator/>
    <div class="mb-3">
        <label for="emaail">Email</label>
        <InputText id="email" @bind-Value="user.Email" class="form-control"/>
        <ValidationMessage For="@(() => user.Email)"/>
    </div>


    <div class="mb-3">
        <label for="password">Password</label>
        <InputText id="password" @bind-Value="user.Password" class="form-control" type="password"/>
        <ValidationMessage For="@(() => user.Password)"/>
        </div>


    <div class="mb-3">
        <label for="confirmPassword">Confirm Password</label>
        <InputText id="confirmPassword" @bind-Value="user.ConfirmPassword" class="form-control" type="password"/>
        <ValidationMessage For="@(() => user.ConfirmPassword)"/>
        </div>
    <button type="submit" class="btn btn-primary">Register</button>
    @if (successfullyRegistered)
    {
        <div class="text-success">
            <span>@RegistrationMessage</span>
        </div>
    }
    else
    {
        <div class="text-danger">
            <span>@RegistrationMessage</span>
        </div>
    }
</EditForm>

@code {
    UserRegister user = new UserRegister();
    
    private string RegistrationMessage = string.Empty;
    private bool successfullyRegistered = false;

    async Task HandleRegistration()
    {
        var result = await AuthService.Register(user);
        RegistrationMessage = !result.Success ? result.Message : "Successfully registered";
        successfullyRegistered = result.Success;
    }
}